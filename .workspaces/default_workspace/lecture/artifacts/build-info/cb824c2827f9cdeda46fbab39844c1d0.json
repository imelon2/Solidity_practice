{
	"id": "cb824c2827f9cdeda46fbab39844c1d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"lecture/smart.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 < 0.9.0;\r\n\r\n/*\r\n    Money Box는 3의 배수 번쨰 사람에게 적립된 이더를 준다.\r\n    \r\n    1. 1이더만 내야한다\r\n    2. 중복해서 참여 불가(단, 누군가 적립금을 받으면 초기화)\r\n    3. 관리자만 적립된 이더 볼 수 있다.\r\n    4. 3의 배수 번째 사람에게만 적립 이더를 준다.\r\n*/\r\n\r\ncontract MoneyBox {\r\n    event WhoPaid(address indexed sender, uint256 payment);\r\n\r\n    // 베포자\r\n    address ownwer;\r\n\r\n    mapping (uint256=>mapping(address => bool)) paidMemberList; // { uint256 : { address : bool } }\r\n    uint round = 1;\r\n\r\n    constructor() {\r\n        ownwer = msg.sender;\r\n    }\r\n\r\n    function checkRound() public view returns(uint256) {\r\n        return round;\r\n    }\r\n\r\n    function checkValue() public view returns(uint256) {\r\n        require(ownwer==msg.sender, \"Only Onwer can check the value\");\r\n        return address(this).balance;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lecture/smart.sol": {
				"MoneyBox": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								}
							],
							"name": "WhoPaid",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "checkRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lecture/smart.sol\":407:983  contract MoneyBox {... */\n  mstore(0x40, 0x80)\n    /* \"lecture/smart.sol\":650:651  1 */\n  0x01\n    /* \"lecture/smart.sol\":637:651  uint round = 1 */\n  0x02\n  sstore\n    /* \"lecture/smart.sol\":660:712  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"lecture/smart.sol\":694:704  msg.sender */\n  caller\n    /* \"lecture/smart.sol\":685:691  ownwer */\n  0x00\n  dup1\n    /* \"lecture/smart.sol\":685:704  ownwer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lecture/smart.sol\":407:983  contract MoneyBox {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lecture/smart.sol\":407:983  contract MoneyBox {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c681920\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x69bbe5c7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lecture/smart.sol\":810:980  function checkValue() public view returns(uint256) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lecture/smart.sol\":720:802  function checkRound() public view returns(uint256) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lecture/smart.sol\":810:980  function checkValue() public view returns(uint256) {... */\n    tag_6:\n        /* \"lecture/smart.sol\":852:859  uint256 */\n      0x00\n        /* \"lecture/smart.sol\":888:898  msg.sender */\n      caller\n        /* \"lecture/smart.sol\":880:898  ownwer==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lecture/smart.sol\":880:886  ownwer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lecture/smart.sol\":880:898  ownwer==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lecture/smart.sol\":872:933  require(ownwer==msg.sender, \"Only Onwer can check the value\") */\n      tag_13\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_13:\n        /* \"lecture/smart.sol\":951:972  address(this).balance */\n      selfbalance\n        /* \"lecture/smart.sol\":944:972  return address(this).balance */\n      swap1\n      pop\n        /* \"lecture/smart.sol\":810:980  function checkValue() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lecture/smart.sol\":720:802  function checkRound() public view returns(uint256) {... */\n    tag_10:\n        /* \"lecture/smart.sol\":762:769  uint256 */\n      0x00\n        /* \"lecture/smart.sol\":789:794  round */\n      sload(0x02)\n        /* \"lecture/smart.sol\":782:794  return round */\n      swap1\n      pop\n        /* \"lecture/smart.sol\":720:802  function checkRound() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_17:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_18:\n        /* \"#utility.yul\":177:201   */\n      tag_25\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_17\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_27\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_18\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:611   */\n    tag_19:\n        /* \"#utility.yul\":526:537   */\n      0x00\n        /* \"#utility.yul\":560:566   */\n      dup3\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:567   */\n      mstore\n        /* \"#utility.yul\":600:604   */\n      0x20\n        /* \"#utility.yul\":595:598   */\n      dup3\n        /* \"#utility.yul\":591:605   */\n      add\n        /* \"#utility.yul\":576:605   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":617:797   */\n    tag_20:\n        /* \"#utility.yul\":757:789   */\n      0x4f6e6c79204f6e7765722063616e20636865636b207468652076616c75650000\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":745:751   */\n      dup3\n        /* \"#utility.yul\":741:755   */\n      add\n        /* \"#utility.yul\":734:790   */\n      mstore\n        /* \"#utility.yul\":617:797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:1169   */\n    tag_21:\n        /* \"#utility.yul\":945:948   */\n      0x00\n        /* \"#utility.yul\":966:1033   */\n      tag_31\n        /* \"#utility.yul\":1030:1032   */\n      0x1e\n        /* \"#utility.yul\":1025:1028   */\n      dup4\n        /* \"#utility.yul\":966:1033   */\n      tag_19\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":959:1033   */\n      swap2\n      pop\n        /* \"#utility.yul\":1042:1135   */\n      tag_32\n        /* \"#utility.yul\":1131:1134   */\n      dup3\n        /* \"#utility.yul\":1042:1135   */\n      tag_20\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1155:1158   */\n      dup3\n        /* \"#utility.yul\":1151:1163   */\n      add\n        /* \"#utility.yul\":1144:1163   */\n      swap1\n      pop\n        /* \"#utility.yul\":803:1169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1175:1594   */\n    tag_15:\n        /* \"#utility.yul\":1341:1345   */\n      0x00\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1368:1377   */\n      dup3\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"#utility.yul\":1356:1382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1428:1437   */\n      dup2\n        /* \"#utility.yul\":1422:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1438   */\n      sub\n        /* \"#utility.yul\":1414:1415   */\n      0x00\n        /* \"#utility.yul\":1403:1412   */\n      dup4\n        /* \"#utility.yul\":1399:1416   */\n      add\n        /* \"#utility.yul\":1392:1439   */\n      mstore\n        /* \"#utility.yul\":1456:1587   */\n      tag_34\n        /* \"#utility.yul\":1582:1586   */\n      dup2\n        /* \"#utility.yul\":1456:1587   */\n      tag_21\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1448:1587   */\n      swap1\n      pop\n        /* \"#utility.yul\":1175:1594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f21149380b5d711be4cd8e00041f4700cba9f1542263f09d42baf8f3c707e42a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600160025534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fe806100656000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635c6819201461003b57806369bbe5c714610059575b600080fd5b610043610077565b6040516100509190610130565b60405180910390f35b61006161010d565b60405161006e9190610130565b60405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe906101a8565b60405180910390fd5b47905090565b6000600254905090565b6000819050919050565b61012a81610117565b82525050565b60006020820190506101456000830184610121565b92915050565b600082825260208201905092915050565b7f4f6e6c79204f6e7765722063616e20636865636b207468652076616c75650000600082015250565b6000610192601e8361014b565b915061019d8261015c565b602082019050919050565b600060208201905081810360008301526101c181610185565b905091905056fea2646970667358221220f21149380b5d711be4cd8e00041f4700cba9f1542263f09d42baf8f3c707e42a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1FE DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C681920 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x69BBE5C7 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x107 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE SWAP1 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A DUP2 PUSH2 0x117 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F6E7765722063616E20636865636B207468652076616C75650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192 PUSH1 0x1E DUP4 PUSH2 0x14B JUMP JUMPDEST SWAP2 POP PUSH2 0x19D DUP3 PUSH2 0x15C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1 DUP2 PUSH2 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE GT 0x49 CODESIZE SIGNEXTEND 0x5D PUSH18 0x1BE4CD8E00041F4700CBA9F1542263F09D42 0xBA 0xF8 RETURN 0xC7 SMOD 0xE4 0x2A PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "407:576:0:-:0;;;650:1;637:14;;660:52;;;;;;;;;;694:10;685:6;;:19;;;;;;;;;;;;;;;;;;407:576;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@checkRound_35": {
									"entryPoint": 269,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkValue_55": {
									"entryPoint": 119,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1597:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "538:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "560:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "576:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "595:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "600:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "591:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "576:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "510:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "515:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "526:11:1",
														"type": ""
													}
												],
												"src": "442:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "753:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "741:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:14:1"
																	},
																	{
																		"hexValue": "4f6e6c79204f6e7765722063616e20636865636b207468652076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "757:32:1",
																		"type": "",
																		"value": "Only Onwer can check the value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "734:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "715:6:1",
														"type": ""
													}
												],
												"src": "617:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1025:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1030:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "966:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "966:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1131:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b",
																	"nodeType": "YulIdentifier",
																	"src": "1042:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1042:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1144:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1155:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1160:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1151:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1144:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "945:3:1",
														"type": ""
													}
												],
												"src": "803:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1399:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1399:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1422:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1392:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1448:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1582:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1456:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1448:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1326:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1341:4:1",
														"type": ""
													}
												],
												"src": "1175:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Onwer can check the value\")\n\n    }\n\n    function abi_encode_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80635c6819201461003b57806369bbe5c714610059575b600080fd5b610043610077565b6040516100509190610130565b60405180910390f35b61006161010d565b60405161006e9190610130565b60405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe906101a8565b60405180910390fd5b47905090565b6000600254905090565b6000819050919050565b61012a81610117565b82525050565b60006020820190506101456000830184610121565b92915050565b600082825260208201905092915050565b7f4f6e6c79204f6e7765722063616e20636865636b207468652076616c75650000600082015250565b6000610192601e8361014b565b915061019d8261015c565b602082019050919050565b600060208201905081810360008301526101c181610185565b905091905056fea2646970667358221220f21149380b5d711be4cd8e00041f4700cba9f1542263f09d42baf8f3c707e42a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C681920 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x69BBE5C7 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x107 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE SWAP1 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A DUP2 PUSH2 0x117 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F6E7765722063616E20636865636B207468652076616C75650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192 PUSH1 0x1E DUP4 PUSH2 0x14B JUMP JUMPDEST SWAP2 POP PUSH2 0x19D DUP3 PUSH2 0x15C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1 DUP2 PUSH2 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE GT 0x49 CODESIZE SIGNEXTEND 0x5D PUSH18 0x1BE4CD8E00041F4700CBA9F1542263F09D42 0xBA 0xF8 RETURN 0xC7 SMOD 0xE4 0x2A PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "407:576:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:170;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;720:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;810:170;852:7;888:10;880:18;;:6;;;;;;;;;;:18;;;872:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;951:21;944:28;;810:170;:::o;720:82::-;762:7;789:5;;782:12;;720:82;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:169::-;526:11;560:6;555:3;548:19;600:4;595:3;591:14;576:29;;442:169;;;;:::o;617:180::-;757:32;753:1;745:6;741:14;734:56;617:180;:::o;803:366::-;945:3;966:67;1030:2;1025:3;966:67;:::i;:::-;959:74;;1042:93;1131:3;1042:93;:::i;:::-;1160:2;1155:3;1151:12;1144:19;;803:366;;;:::o;1175:419::-;1341:4;1379:2;1368:9;1364:18;1356:26;;1428:9;1422:4;1418:20;1414:1;1403:9;1399:17;1392:47;1456:131;1582:4;1456:131;:::i;:::-;1448:139;;1175:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "102000",
								"executionCost": "46519",
								"totalCost": "148519"
							},
							"external": {
								"checkRound()": "2437",
								"checkValue()": "2581"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 407,
									"end": 983,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 407,
									"end": 983,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 407,
									"end": 983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 650,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 637,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 637,
									"end": 651,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 712,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 660,
									"end": 712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 694,
									"end": 704,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 685,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 685,
									"end": 704,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 685,
									"end": 704,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 685,
									"end": 704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 685,
									"end": 704,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 407,
									"end": 983,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 407,
									"end": 983,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 407,
									"end": 983,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 407,
									"end": 983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 983,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 407,
									"end": 983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 983,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f21149380b5d711be4cd8e00041f4700cba9f1542263f09d42baf8f3c707e42a64736f6c634300080d0033",
									".code": [
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "5C681920"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "69BBE5C7"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 810,
											"end": 980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 898,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 880,
											"end": 898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 880,
											"end": 886,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 880,
											"end": 898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 880,
											"end": 898,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 872,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 872,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 972,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 944,
											"end": 972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 980,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 720,
											"end": 802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 762,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 789,
											"end": 794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 782,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 802,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 442,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 526,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 548,
											"end": 567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 591,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 617,
											"end": 797,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 757,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79204F6E7765722063616E20636865636B207468652076616C75650000"
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 741,
											"end": 755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1030,
											"end": 1032,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1025,
											"end": 1028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1131,
											"end": 1134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1582,
											"end": 1586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkRound()": "69bbe5c7",
							"checkValue()": "5c681920"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"WhoPaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lecture/smart.sol\":\"MoneyBox\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lecture/smart.sol\":{\"keccak256\":\"0x85b15179eeccdefe7cc33a6f97d2f81af9a8fc8793174c4616ac2ff915e496d4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8450168117755c1c70ac9034ad854c9c07bf93b4b816ec3fb9f56b64cde0d82c\",\"dweb:/ipfs/QmUPRYuxvkAn624gE5G3UYq6yZ5Ev4vwK1G8GLAtE4nWUo\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lecture/smart.sol": {
				"ast": {
					"absolutePath": "lecture/smart.sol",
					"exportedSymbols": {
						"MoneyBox": [
							56
						]
					},
					"id": 57,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MoneyBox",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 56,
							"linearizedBaseContracts": [
								56
							],
							"name": "MoneyBox",
							"nameLocation": "416:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "124914a3e6966a060a8132f2c609203a76d9b0cc2b5ba9e626df64525de4765c",
									"id": 7,
									"name": "WhoPaid",
									"nameLocation": "438:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "462:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "446:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "478:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "470:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:41:0"
									},
									"src": "432:55:0"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "ownwer",
									"nameLocation": "521:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "513:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "513:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "paidMemberList",
									"nameLocation": "580:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "536:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 10,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "545:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "536:43:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueType": {
											"id": 13,
											"keyType": {
												"id": 11,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "562:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "554:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 12,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "573:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "round",
									"nameLocation": "642:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "637:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "637:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "650:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "674:38:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "ownwer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "685:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 22,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "694:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "694:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "685:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "685:19:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:0:0"
									},
									"scope": 56,
									"src": "660:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "771:31:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"name": "round",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "789:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 31,
												"id": 33,
												"nodeType": "Return",
												"src": "782:12:0"
											}
										]
									},
									"functionSelector": "69bbe5c7",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkRound",
									"nameLocation": "729:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:9:0"
									},
									"scope": 56,
									"src": "720:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "861:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 41,
																"name": "ownwer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "880:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 42,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "888:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "888:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "880:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204f6e7765722063616e20636865636b207468652076616c7565",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "900:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b",
																"typeString": "literal_string \"Only Onwer can check the value\""
															},
															"value": "Only Onwer can check the value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c8e1fab722be0cc6cee12f59db664ff41c69a72c089ca1d7933db53dbdf4b7b",
																"typeString": "literal_string \"Only Onwer can check the value\""
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "872:61:0"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 50,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "959:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MoneyBox_$56",
																	"typeString": "contract MoneyBox"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MoneyBox_$56",
																	"typeString": "contract MoneyBox"
																}
															],
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "951:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 48,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "951:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "951:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "951:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 39,
												"id": 53,
												"nodeType": "Return",
												"src": "944:28:0"
											}
										]
									},
									"functionSelector": "5c681920",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkValue",
									"nameLocation": "819:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "851:9:0"
									},
									"scope": 56,
									"src": "810:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 57,
							"src": "407:576:0",
							"usedErrors": []
						}
					],
					"src": "39:944:0"
				},
				"id": 0
			}
		}
	}
}